#TOOLS
1. VTune 
> Intel VTune Performance Anaylzer 
> It's for x86 and x64 architecture  
> With GUI and available for Linux(Free) and Windows(commercial). 

2. Shiny
>  Open Source free to use 
> For C/C++ 
>
> Sehr wenig Overhead, sehr leistungsfähig und akkurat bei der Laufzeitanalyse.
> Unglaublich einfach in der Handhabung und gute Dokumentation des Quellcodes.
> Resultate werden in einem Aufrufbaum dargestellt und nach der Laufzeit sortiert.
> „On-the-fly“ Glättung der Mittelwerte für wissenschaftliche und Main-Loop orientierte Programme, wie z.B. Spiele.
> Gerenderte Graphen und farbig dargestellte Ausgaben in Ogre3D und anderen Grafikengines.
> Plattformunabhängiger, objektorientierter und frei verwendbarer Quellcode.
#how to use ? 
Each Function which suppos to be analysed, has to start a makro PROFILE_FUNC() 
The results can be observed with PROFILE_OUTPUT() function
> Ein offensichtlicher Nachteil von Shiny ist der Umstand das der Profiler einen Eingriff in den Quellcode erfordert,
> d.h. eine manuelle Instrumentierung durch Erweiterung des Quelltextes durch Befehle stattfindet. Allerdings lassen sich 
> die Daten auf diese Weise auch direkt programmtechnisch auswerten und Funktionen können ganz selektiv analysiert werden.
Shiny can be download from https://sourceforge.net/projects/shinyprofiler/

2. Very Sleepy
Very Sleepy is also free to use for C/C++ which based on Sleepy Project.
> Sleepy is able to analyse multi-threads application

 Es wird vielmehr in einem bestimmten zeitlichen Zyklus die Laufzeit gemessen. Dieses Verfahren nennt man auch Sampling.
 Mit dem Profiler Very Sleepy können Sie Laufzeitanalysen abspeichern und jederzeit mit anderen Stichproben vergleichen.
 Die Wirkung einer Optimierung lässt sich auf diese Weise einfach überprüfen.


